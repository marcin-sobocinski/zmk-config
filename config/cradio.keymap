/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer definitions
    #define BASE 0
    #define SYM 1
    #define EXT 2
    #define FNC 3
    #define SYM2 4
    #define ACCENT 5
// -----------------

&mt {
   //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ {

    combos {
        compatible = "zmk,combos";
        combo_accent {
            timeout-ms = <300>;
            key-positions = <32 33>;
            bindings = <&mo ACCENT>;
        };
    };

    keymap {
            compatible = "zmk,keymap";

        // Base alpha layer
       		default_layer {
		bindings = <
		&kp Q &kp W &kp F &kp P &kp B           &kp J &kp L  &kp U     &kp Y   &kp SEMI 
		&kp A &kp R &kp S &kp T &kp G           &kp M &kp N  &kp E     &kp I   &kp O
		&kp Z &kp X &kp C &kp D &kp V           &kp K &kp H  &kp COMMA &kp DOT &kp NON_US_HASH
              &mt LSHIFT RET &kp BSPC           &kp SPACE &kp LALT
		>;
		};

        // Numbers and high frequency symbols
       		sym_layer {
		bindings = <
		&kp N1 &kp N2 &kp N3 &kp N4 &kp N5		                                    &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
		&kp NON_US_BSLH &kp LS(N5) &kp LS(N8) &kp LS(RA(LBKT)) &kp RA(LBKT) 		&kp LS(N0) &kp LS(MINUS)  &kp MINUS &kp RBKT &kp LS(RBKT) 
		&kp LS(NON_US_BSLH) &kp LS(N4) &kp LS(N9) &kp LS(RA(RBKT)) &kp RA(RBKT) 	&kp RA(SEMI) &kp LS(N1) &kp LS(N2) &kp SLASH &kp LS(N7)
					                                        &mo FNC  &mo SYM2       &trans &trans
		>;
		};
		
        // Main modifiers and arrow keys
		    ext_layer {
		bindings = <
		&kp ESC  &trans &trans  &trans  &trans    			        &kp PG_UP  &kp HOME &kp UP &kp END &kp CAPS
		&sk LALT &sk LGUI  &sk LSHIFT  &sk LCTRL  &kp RALT 			&kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT   &kp DEL
		&kp LC(Z)  &kp LC(X) &kp LC(C) &kp TAB   &kp LC(V)          &kp LC(BSPC) &kp BSPC &trans &trans  &trans
					                        &trans &kp LCTRL    &kp ENTER  &mo FNC 
		>;
		};

        // Function keys with modifiers
       		fnc_layer {
		bindings = <
		&kp F1 &kp F2 &kp F3 &kp F4 &kp F5                  &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 
		&sk LALT &sk LGUI &sk LSHIFT &sk LCTRL &kp RALT     &kp F11 &kp F12  &kp PRINTSCREEN &trans &trans
		&bt BT_CLR &none &none &none &bt BT_SEL 0				    &bt BT_SEL 1 &none &none &none &none 
          				           &none &none         &none &none  
		>;
		};

        // Low frequency symbols.
       		symbols_2_layer {
		bindings = <
		&none &kp LS(SLASH) &kp LS(N3) &kp RA(E) &kp RA(APOS)                  &none &none &none &none &none 
		&kp RA(MINUS) &kp RA(EQUAL) &kp GRAVE &kp LS(GRAVE) &kp LS(N6)         &none &none &none &none &none
		&none &none &none &none &none				                           &none &none &none &none &none
          				           &none &none                           &none &none 
		>;
		};

        // Used to type regional accents.
       		accent_layer {
		bindings = <
		&none &none &none &kp RA(LS(E)) &none                      &none &none &none &none &none 
		&kp APOS &kp EQUAL &kp SEMI &kp LBKT &kp LS(LBKT)          &none &none &none &none &none
		&none &none &none &kp NON_US_HASH &none                    &none &none &none &none &none
          				     &none &none                        &none &none 
		>;
		};
        
	};
};
